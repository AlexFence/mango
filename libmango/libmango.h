#include <stddef.h>
#include <stdint.h>

typedef void * MangoFile;
typedef void * MangoImage;
typedef void * MangoImageMeta;
typedef void * MangoMeta;

typedef struct ImageData {
    uint8_t* pointer;
    size_t length;
} ImageData;

typedef struct MangoIV {
  uint8_t* pointer;
  size_t length;
} MangoIV;


typedef struct IntOption {
    int value;
    int present;
} IntOption;

//---------------------------
// Mango File
// --------------------------
extern MangoFile new_mango_file(); // TODO rename to mangofile_new
extern void mangofile_free(MangoFile);
extern void mangofile_add_image(MangoFile, MangoImage);
extern int mangofile_add_image_by_path(MangoFile, char *);
extern MangoImage mangofile_get_image(MangoFile, int);
extern int  mangofile_set_image(MangoFile, MangoImage, int);
extern int mangofile_get_image_count(MangoFile);
extern MangoMeta mangofile_get_meta(MangoFile);

/**
 * Saves a MangoFile to the file system.
 *
 * This Function uses the default format "cbor".
 *
 * If you want to use one of the other supported
 * formats specifically  please use one of the following functions:
 *
 * - \link mangofile_save_cbor \endlink
 * - \link mangofile_save_json \endlink
 * - \link mangofile_save_bson \endlink

 *
 * All formats should use the file ending ".mango"
 * and can be opened with \link mangofile_open \endlink.
 */
extern int mangofile_save(MangoFile, char *);

/**
 * Saves a MangoFile in the cbor format to the file system.
 *
 * \note his is currently the default format, because it has the
 * lowest overhead!
 *
 * Following formats are also available:
 * - \link mangofile_save_json \endlink
 * - \link mangofile_save_bson \endlink
 *
 * You should save your file with ending ".mango".
 */
extern int mangofile_save_cbor(MangoFile, char *);

/**
 * Saves a MangoFile in the bson format to the file system.
 *
 * Following formats are also available:
 * - \link mangofile_save_json \endlink
 * - \link mangofile_save_cbor \endlink
 *
 * You should save your file with ending ".mango".
 */
extern int mangofile_save_bson(MangoFile, char *);

/**
 * Saves a MangoFile in the json format to the file system.
 *
 * \warning You shouldn't really use this one,
 * the overhead that gets generated by the base64 encoding is way too big.
 * This is more meant for debuging purposes.
 *
 * \note There are currently no plans to depreciate the json format.
 *
 * Following formats are also available:
 * - \link mangofile_save_bson \endlink
 * - \link mangofile_save_cbor \endlink
 *
 * You should save your file with ending ".mango".
 */
extern int mangofile_save_json(MangoFile, char *);

/**
 * opens a MangoFile fromo the file system.
 *
 * \note The internal format of the MangoFile does not matter.
 * This function will detect the format and open it accordingly.
 */
extern MangoFile mangofile_open(char *, int *);

// --------------------------
// Mango Image
// --------------------------
extern void mangoimg_free(MangoImage);
extern MangoImage mangoimg_from_path(char *, int *);
extern int mangoimg_compress(MangoImage, char *);
extern int mangoimg_uncompress(MangoImage);
extern MangoImageMeta mangoimg_get_meta(MangoImage);
extern ImageData mangoimg_get_image_data(MangoImage);
extern char * mangoimg_get_base64_image_data(MangoImage);
extern int mangoimg_encrypt(MangoImage, char *, char *);
extern int mangoimg_decrypt(MangoImage, char *);
extern int save(MangoImage, char *);

// --------------------------
// Mango Image Meta
// --------------------------
extern char * mangoimgmeta_compression(MangoImageMeta);
extern char * mangoimgmeta_encryption(MangoImageMeta);
extern char * mangoimgmeta_checksum(MangoImageMeta);
extern char * mangoimgmeta_mime(MangoImageMeta);
extern char * mangoimgmeta_filename(MangoImageMeta);
extern int  * mangoimgmeta_iv(MangoImageMeta);
extern int  * mangoimgmeta_iv_size(MangoImageMeta);

// --------------------------
// Mango Meta
// --------------------------
extern char * mangometa_get_title(MangoMeta);
extern void mangometa_set_title(MangoMeta, char *);

extern char * mangometa_get_author(MangoMeta);
extern void mangometa_set_author(MangoMeta, char *);

extern char * mangometa_get_publisher(MangoMeta);
extern void mangometa_set_publisher(MangoMeta, char *);

extern char * mangometa_get_source(MangoMeta);
extern void mangometa_set_source(MangoMeta, char *);

extern char * mangometa_get_translation(MangoMeta);
extern void mangometa_set_translation(MangoMeta, char *);

extern char * mangometa_get_language(MangoMeta);
extern void mangometa_set_language(MangoMeta, char *);

extern IntOption mangometa_get_volume(MangoMeta);
extern void mangometa_set_volume(MangoMeta, short *);

extern IntOption mangometa_get_chapter(MangoMeta);
extern void mangometa_set_chapter(MangoMeta, short *);

extern IntOption mangometa_get_year(MangoMeta);
extern void mangometa_set_year(MangoMeta, short *);

